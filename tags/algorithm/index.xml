<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>algorithm on Notes</title>
    <link>http://example.org/tags/algorithm/</link>
    <description>Recent content in algorithm on Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright © 2008–2019, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Sat, 18 Sep 2021 13:08:42 +0800</lastBuildDate><atom:link href="http://example.org/tags/algorithm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>快速傅里叶变换</title>
      <link>http://example.org/posts/%E5%BF%AB%E9%80%9F%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2/</link>
      <pubDate>Sat, 18 Sep 2021 13:08:42 +0800</pubDate>
      
      <guid>http://example.org/posts/%E5%BF%AB%E9%80%9F%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2/</guid>
      <description>快速傅里叶变换 快速傅里叶变换是什么？ 快速傅里叶变换是一种能够在 $O(nlogn)$ 的时间内计算离散福利也变换的算法，在算法竞赛中常用于快速计算多项式乘法。
多项式乘法 对于两个多项式 $A(x) = a_0 + a_1x + a_2x^2 + \cdots + a_nx^n, B(x) = b_0 + b_1x + b_2x^2 + \cdots + b_nx^n$ ，求出 $C(x) = A(x) \times B(x)$ ，使用朴素算法的时间复杂度为 $O(n^2)$
for (int i = 0; i &amp;lt; n; ++i) for (int j = 0; j &amp;lt; n; ++j) c[i + j] += a[i] * b[j]; 如何加速多项式的乘法呢？
多项式的两种表示方法 多项式有两种表示方法：1. 系数表示法 2. 点值表示法
多项式由系数表示法转为点值表示法的过程，就称为DFT；把一个多项式的点值表示法转化为系数表示法的过程，称为IDFT，FFT就是通过取某些特殊的x的点值来加速DFT和IDFT的过程。
系数表示法 对于一个 ${n}$ 维的多项式A(x)，它的系数 $(a_0, a_1, a_2, \cdots a_n)$ 能够唯一的表示这个多项式。</description>
    </item>
    
  </channel>
</rss>
